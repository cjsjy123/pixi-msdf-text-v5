{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap da080d1b74bb728276f8","webpack:///./src/index.ts","webpack:///./src/MSDFText.ts","webpack:///./src/msdf.vert","webpack:///./src/msdf.frag"],"names":[],"mappings":"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","file":"pixi-msdf-text.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MSDFText\"] = factory();\n\telse\n\t\troot[\"MSDFText\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap da080d1b74bb728276f8","export { MSDFText, MSDFTextOption } from \"./MSDFText\";\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","\nconst vertShader = require(\"./msdf.vert\")\nconst fragShader = require(\"./msdf.frag\")\n\nclass MSDFCharInfo {\n    private static _pool: MSDFCharInfo[] = new Array<MSDFCharInfo>();\n\n    public line: number;\n    public charCode: number;\n    public drawRect: PIXI.Rectangle;\n    public rawRect: PIXI.Rectangle;\n\n    public static Create(l: number, charcode: number,\n        drawx: number, drawy: number, draww: number, drawh: number,\n        rawx: number, rawy: number, raww: number, rawh: number) {\n\n        let info: MSDFCharInfo = null;\n\n        if (MSDFCharInfo._pool.length > 0) {\n            info = MSDFCharInfo._pool.pop();\n        } else {\n            info = new MSDFCharInfo();\n        }\n\n        info.set(l,charcode,drawx,drawy,draww,drawh,rawx,rawy,raww,rawh)\n\n        return info;\n    }\n\n    public set(l: number, charcode: number,\n        drawx: number, drawy: number, draww: number, drawh: number,\n        rawx: number, rawy: number, raww: number, rawh: number)\n    {\n        this.line = l;\n        this.charCode = charcode;\n\n        if (!this.drawRect) {\n            this.drawRect = new PIXI.Rectangle();\n        }\n\n        this.drawRect.x = drawx;\n        this.drawRect.y = drawy;\n        this.drawRect.width = draww;\n        this.drawRect.height = drawh;\n\n        if (!this.rawRect) {\n            this.rawRect = new PIXI.Rectangle();\n        }\n\n        this.rawRect.x = rawx;\n        this.rawRect.y = rawy;\n        this.rawRect.width = raww;\n        this.rawRect.height = rawh;\n    }\n\n    public dispose() {\n        MSDFCharInfo._pool.push(this);\n    }\n}\n\nexport interface MSDFTextOption {\n    // Basic\n    fontFace: string;\n    fontSize: number;\n    fillColor?: number;\n    weight?: number;\n    // Effect\n    texture?: PIXI.Texture;\n    strokeColor?: number;\n    strokeThickness?: number;\n    dropShadow?: boolean;\n    dropShadowColor?: number;\n    dropShadowAlpha?: number;\n    dropShadowOffset?: PIXI.Point;\n    dropShadowBlur?: number;\n    // Layout\n    align?: \"left\" | \"right\" | \"center\";\n    baselineOffset?: number;\n    letterSpacing?: number;\n    kerning?: boolean;\n    lineSpacing?: number;\n    maxWidth?: number;\n\n    noCheck?: boolean;\n    // Debug\n    debugLevel?: 1 | 2 | 3;\n    pxrange?: number;\n}\n\nexport class MSDFText extends PIXI.Mesh {\n    public static Debug: boolean = false;\n\n    private _text: string;\n    // Font data passed to renderer\n    private _font: any;\n    private _textWidth: number;\n    private _textHeight: number;\n    private _maxWidth: number;\n\n    // TODO: add Effect & Layout\n    private _baselineOffset: number;\n    private _letterSpacing: number;\n    private _lineSpacing: number;\n\n\n    // TODO: Metrics object\n    private _textMetricsBound: PIXI.Rectangle;\n\n    private indices: PIXI.Buffer;\n    private uvs: PIXI.Buffer;\n    private vertices: PIXI.Buffer;\n\n    private nocheck: boolean;\n\n    private chars: MSDFCharInfo[];\n    private cachepoint: PIXI.IPoint;\n    private worldarray: Float32Array;\n    private soffsetarray: Float32Array;\n    \n    public get text(): string { return this._text; }\n    public set text(value) { this._text = this.unescape(value); this.updateText(); }\n    public get fontData(): any { return this._font; }\n    // public get glDatas(): any { return this._glDatas; } --> Steve -- Don't believe this is needed anymore?\n    public get textWidth(): number { return this._textWidth; }\n    public get textHeight(): number { return this._textHeight; }\n    public get maxWidth(): number { return this._maxWidth; }\n    public get textMetric(): PIXI.Rectangle { return this._textMetricsBound; }\n\n    constructor(text: string, options: MSDFTextOption) {\n        // Steve -- Create default geometry, uniforms and shader for our base constructor\n        const geometry = new PIXI.Geometry();\n\n        const indices = new PIXI.Buffer(null, false, true);\n        const uvs = new PIXI.Buffer(null, false, false);\n        const vertices = new PIXI.Buffer(null, false, false);\n\n        geometry.addIndex(indices)\n            .addAttribute('aVertexPosition', vertices)\n            .addAttribute('aTextureCoord', uvs);\n\n        const program = new PIXI.Program(vertShader, fragShader, 'MSDFShader');\n        const uniforms = {};\n        const shader = new PIXI.Shader(program, uniforms);\n\n        super(geometry, shader);\n\n        // Steve -- Now we've called the constructor, we're free to use `this`.\n        this.indices = indices;\n        this.uvs = uvs;\n        this.vertices = vertices;\n        this.shader = shader;\n\n        this.texture = options.texture || PIXI.Texture.WHITE;\n\n        this._text = text;\n        this._font = {\n            fontFace: options.fontFace,\n            fontSize: options.fontSize,\n            color: options.fillColor === undefined ? 0xFF0000 : options.fillColor,\n            weight: options.weight === undefined ? 0.5 : 1 - options.weight,\n            align: options.align,\n            kerning: options.kerning === undefined ? true : options.kerning,\n            strokeColor: options.strokeColor || 0,\n            dropShadow: options.dropShadow || false,\n            dropShadowColor: options.dropShadowColor || 0,\n            dropShadowAlpha: options.dropShadowAlpha === undefined ? 0.5 : options.dropShadowAlpha,\n            dropShadowBlur: options.dropShadowBlur || 0,\n            dropShadowOffset: options.dropShadowOffset || new PIXI.Point(2, 2),\n            pxrange: options.pxrange === undefined ? 3 : options.pxrange,\n        };\n\n        if (options.strokeThickness === undefined || options.strokeThickness === 0) {\n            this._font.strokeWeight = 0;\n        } else {\n            this._font.strokeWeight = this._font.weight - options.strokeThickness;\n        }\n\n        this.nocheck = options.noCheck || false;\n\n        // TODO: layout option initialze\n        this._baselineOffset = options.baselineOffset === undefined ? 0 : options.baselineOffset;\n        this._letterSpacing = options.letterSpacing === undefined ? 0 : options.letterSpacing;\n        this._lineSpacing = options.lineSpacing === undefined ? 0 : options.lineSpacing;\n\n        this._textWidth = this._textHeight = 0;\n        this._maxWidth = options.maxWidth || 0;\n        // Steve -- Don't believe this is needed?, as it now seems to take care of all the dirty flags itself, when we update the buffers.\n        // this._anchor = new PIXI.ObservablePoint(() => { }, this, 0, 0);\n        this._textMetricsBound = new PIXI.Rectangle();\n        this.chars = [];\n        this.cachepoint = new PIXI.Point();\n\n        this.updateText();\n    }\n\n    private isSpace(charcode: number) {\n        // \\t \\v \\f space\n        return charcode == 9 || charcode == 11 || charcode == 12  || charcode ==32;\n    }\n\n    private isToNextLine(charcode: number,nextcharcode: number)\n    {\n        if (charcode === 13 && nextcharcode === 10) {\n            return 2;\n        }\n        else if(charcode == 13)\n        {\n            return 1;\n        }\n        else if(charcode == 10)\n        {\n            return 1;\n        }\n        return -1;\n    }\n\n    public updateText() {\n        // clear all gizmo\n        // this.removeChildren();\n\n        // Steve -- Typescript casting hack to reference the static fonts array\n        const fontData = (PIXI.BitmapText as any).fonts[this._font.fontFace];\n        if (!fontData) throw new Error(\"Invalid fontFace: \" + this._font.fontFace);\n        // No beauty way to get bitmap font texture\n        const texture = this.getBitmapTexture(this._font.fontFace);\n        this._font.rawSize = fontData.size;\n\n        const scale = this._font.fontSize / fontData.size;\n\n        // const lineWidths: number[] = [];\n        const texWidth = texture.width;\n        const texHeight = texture.height;\n\n        this.cachepoint.x = 0;\n        this.cachepoint.y = -this._baselineOffset * scale;\n\n        let prevCharCode = -1;\n        let lastLineWidth = 0;\n        let maxLineWidth = 0;\n        let line = 0;\n        let lastSpace = -1;\n        let lastSpaceWidth = 0;\n        let spacesRemoved = 0;\n        let maxLineHeight = 0;\n        let usedsize = 0;\n        //  \\f\\n\\r\\t\\v ascii  9-13  \\r=13 \\n=10 space=32\n\n        for (let i = 0; i < this._text.length; i++) {\n            const charCode = this._text.charCodeAt(i);\n            const nextCode = i+1 < this._text.length?this._text.charCodeAt(i+1):-1;\n            // If char is space, cache to lastSpace\n            if (this.isSpace(charCode)) {\n                lastSpace = i;\n                lastSpaceWidth = lastLineWidth;\n            }\n\n            // If char is return next line\n            if (this.isToNextLine(charCode,nextCode) > 0) {\n                lastLineWidth -= this._letterSpacing;\n                // lineWidths.push(lastLineWidth);\n                maxLineWidth = Math.max(maxLineWidth, lastLineWidth);\n                line++;\n\n                this.cachepoint.x = 0;\n                this.cachepoint.y += fontData.lineHeight * scale + this._lineSpacing * scale;\n                prevCharCode = -1;\n                continue;\n            }\n\n            if (lastSpace !== -1 && this._maxWidth > 0 && this.cachepoint.x > this._maxWidth) {\n                PIXI.utils.removeItems(this.chars, lastSpace - spacesRemoved, i - lastSpace);\n                i = lastSpace;\n                lastSpace = -1;\n                ++spacesRemoved;\n\n                lastSpaceWidth -= this._letterSpacing;\n                // lineWidths.push(lastSpaceWidth);\n                maxLineWidth = Math.max(maxLineWidth, lastSpaceWidth);\n                line++;\n\n                this.cachepoint.x = 0;\n                this.cachepoint.y += fontData.lineHeight * scale + this._lineSpacing * scale;\n                prevCharCode = -1;\n                continue;\n            }\n\n            const charData = fontData.chars[charCode];\n\n            if (!charData) continue;\n\n            if (this._font.kerning && prevCharCode !== -1 && charData.kerning[prevCharCode]) {\n                this.cachepoint.x += charData.kerning[prevCharCode] * scale;\n            }\n\n            let updatedchar = this.chars[usedsize]\n            if(!updatedchar)\n            {\n                updatedchar = MSDFCharInfo.Create(line,charCode,\n                    this.cachepoint.x + charData.xOffset * scale,\n                    this.cachepoint.y + charData.yOffset * scale,\n                    charData.texture.width * scale,\n                    charData.texture.height * scale,\n                    charData.texture.orig.x,\n                    charData.texture.orig.y,\n                    charData.texture.width,\n                    charData.texture.height)\n                \n                this.chars.push(updatedchar)\n            }\n            else\n            {\n                updatedchar.set(line,charCode,\n                    this.cachepoint.x + charData.xOffset * scale,\n                    this.cachepoint.y + charData.yOffset * scale,\n                    charData.texture.width * scale,\n                    charData.texture.height * scale,\n                    charData.texture.orig.x,\n                    charData.texture.orig.y,\n                    charData.texture.width,\n                    charData.texture.height)\n            }\n\n            usedsize++;\n            // lastLineWidth = pos.x + (charData.texture.width * scale + charData.xOffset);\n            this.cachepoint.x += (charData.xAdvance + this._letterSpacing) * scale;\n            lastLineWidth = this.cachepoint.x;\n            maxLineHeight = Math.max(maxLineHeight, this.cachepoint.y + fontData.lineHeight * scale);\n            prevCharCode = charCode;\n        }\n\n        if(usedsize < this.chars.length)\n        {\n            for (let index = usedsize; index < this.chars.length; index++) {\n                const element = this.chars[index];\n                if(element)\n                {\n                    element.dispose();\n                }\n            }\n    \n            this.chars.splice(usedsize,this.chars.length - usedsize)\n        }\n\n\n        // lineWidths.push(lastLineWidth);\n        maxLineWidth = Math.max(maxLineWidth, lastLineWidth);\n\n        // const lineAlignOffsets = [];\n        // for (let i = 0; i <= line; i++) {\n        //     let alignOffset = 0;\n\n        //     if (this._font.align === \"right\") {\n        //         alignOffset = maxLineWidth - lineWidths[i];\n        //     } else if (this._font.align === \"center\") {\n        //         alignOffset = (maxLineWidth - lineWidths[i]) / 2;\n        //     }\n        //     lineAlignOffsets.push(alignOffset);\n        // }\n\n        // Update line alignment and fontSize\n        // let lineNo = -1;\n        // for (const char of chars) {\n        //     char.drawRect.x = char.drawRect.x + lineAlignOffsets[char.line];\n        //     if (lineNo !== char.line) {\n        //         lineNo = char.line;\n        //         // draw line gizmo\n        //         if (this._debugLevel > 1) {\n        //             this.drawGizmoRect(new PIXI.Rectangle(\n        //                 char.drawRect.x - fontData.chars[char.charCode].xOffset * scale,\n        //                 char.drawRect.y - fontData.chars[char.charCode].yOffset * scale,\n        //                 lineWidths[lineNo],\n        //                 fontData.lineHeight * scale\n        //             ), 1, 0x00FF00, 0.5);\n        //         }\n        //     }\n        // }\n        // // draw text bound gizmo\n        // if (this._debugLevel > 0) {\n        //     this.drawGizmoRect(this.getLocalBounds(), 1, 0xFFFFFF, 0.5);\n        // }\n\n        this._textWidth = maxLineWidth;\n        this._textHeight = maxLineHeight;\n        //0, 0, maxLineWidth, maxLineHeight\n        this._textMetricsBound.width = maxLineHeight;\n        this._textMetricsBound.height = maxLineHeight;\n\n        this.vertices.update(this.toVertices(this.vertices.data as any, this.chars));\n        this.uvs.update(this.toUVs(this.uvs.data as any,this.chars, texWidth, texHeight));\n        this.indices.update(this.createIndicesForQuads(this.indices.data as any,this.chars.length));\n\n        if (this.shader.uniforms.uSampler !== texture) {\n            this.shader.uniforms.uSampler = texture;\n        }\n        this.updateUniforms();\n    }\n\n    public updateUniforms() {\n         // Steve -- Binding is no longer required, apparently.\n\n        // Steve -- Not sure we need this, since Mesh has it's own blendmode?\n        // If we do -- then we can pass State into the Mesh constructor, same way we passed the geometry & shader.\n        //if (renderer.state) renderer.state.setBlendMode(msdfText.blendMode);\n\n        if (!this.worldarray) {\n            this.worldarray = new Float32Array(9);\n        }\n\n        if (!this.soffsetarray) {\n            this.soffsetarray = new Float32Array(2);\n        }\n\n        this.worldTransform.toArray(true,this.worldarray);\n        this.soffsetarray[0] = this._font.dropShadowOffset.x ;\n        this.soffsetarray[1] = this._font.dropShadowOffset.x ;\n\n        this.shader.uniforms.translationMatrix = this.worldarray;\n        this.shader.uniforms.u_alpha = this.worldAlpha;\n        this.shader.uniforms.u_color = PIXI.utils.hex2rgb(this._font.color);\n        this.shader.uniforms.u_fontSize = this._font.fontSize * this.scale.x;\n        this.shader.uniforms.u_fontInfoSize = 1;\n        this.shader.uniforms.u_weight = this._font.weight;\n        this.shader.uniforms.u_pxrange = this._font.pxrange;\n        this.shader.uniforms.strokeWeight = this._font.strokeWeight;\n        this.shader.uniforms.strokeColor = PIXI.utils.hex2rgb(this._font.strokeColor);\n        this.shader.uniforms.tint = PIXI.utils.hex2rgb(this.tint);\n        this.shader.uniforms.hasShadow = this._font.dropShadow;\n        this.shader.uniforms.shadowOffset = this.soffsetarray;\n        this.shader.uniforms.shadowColor = PIXI.utils.hex2rgb(this._font.dropShadowColor);\n        this.shader.uniforms.shadowAlpha = this._font.dropShadowAlpha;\n        this.shader.uniforms.shadowSmoothing = this._font.dropShadowBlur;\n    }\n\n    private getBitmapTexture(fontFace: string): PIXI.Texture {\n        // Steve -- Typescript casting hack\n        const fontData = (PIXI.BitmapText as any).fonts[fontFace];\n        if (!fontData) return PIXI.Texture.EMPTY;\n        // No beauty way to get bitmap font texture, hack needed\n\n        for (const key in fontData.chars) {\n            let data = fontData.chars[key]\n            let texturePath = data.texture.baseTexture.resource.url;\n            return PIXI.utils.TextureCache[texturePath];\n        }\n        return PIXI.Texture.EMPTY;\n    }\n\n    private toVertices(old: Float32Array, chars: MSDFCharInfo[]): Float32Array {\n        const totalIndices = chars.length * 4 * 2;\n        let positions: Float32Array = null;\n\n        if (old && old.length === totalIndices) {\n            positions = old;\n        } else {\n            positions = new Float32Array(totalIndices);\n        }\n\n        let i = 0;\n\n        for (const char of chars) {\n            const x = char.drawRect.x;\n            const y = char.drawRect.y;\n            // quad size\n            const w = char.drawRect.width;\n            const h = char.drawRect.height;\n\n            // BL\n            positions[i++] = x;\n            positions[i++] = y;\n            // TL\n            positions[i++] = x;\n            positions[i++] = y + h;\n            // TR\n            positions[i++] = x + w;\n            positions[i++] = y + h;\n            // BR\n            positions[i++] = x + w;\n            positions[i++] = y;\n        }\n\n        return positions;\n    }\n\n    private toUVs(old: Float32Array, chars: MSDFCharInfo[], texWidth: number, texHeight: number): Float32Array {\n\n        const totalIndices = chars.length * 4 * 2;\n        let uvs: Float32Array = null;\n\n        if (old && old.length === totalIndices) {\n            uvs = old;\n        } else {\n            uvs = new Float32Array(totalIndices);\n        }\n\n        let i = 0;\n\n        for (const char of chars) {\n            // Note: v coordinate is reversed 2D space Y coordinate\n            const u0 = char.rawRect.x / texWidth;\n            const u1 = (char.rawRect.x + char.rawRect.width) / texWidth;\n            const v0 = (char.rawRect.y + char.rawRect.height) / texHeight;\n            const v1 = char.rawRect.y / texHeight;\n            // BL\n            uvs[i++] = u0;\n            uvs[i++] = v1;\n            // TL\n            uvs[i++] = u0;\n            uvs[i++] = v0;\n            // TR\n            uvs[i++] = u1;\n            uvs[i++] = v0;\n            // BR\n            uvs[i++] = u1;\n            uvs[i++] = v1;\n        }\n\n        return uvs;\n    }\n\n    private createIndicesForQuads(old: Uint16Array, size: number): Uint16Array {\n        // the total number of indices in our array, there are 6 points per quad.\n        const totalIndices = size * 6;\n        let indices: Uint16Array = null;\n\n        if (old && old.length === totalIndices) {\n            indices = old;\n        } else {\n            indices = new Uint16Array(totalIndices);\n        }\n\n        // fill the indices with the quads to draw\n        for (let i = 0, j = 0; i < totalIndices; i += 6, j += 4) {\n            indices[i + 0] = j + 0;\n            indices[i + 1] = j + 1;\n            indices[i + 2] = j + 2;\n            indices[i + 3] = j + 0;\n            indices[i + 4] = j + 2;\n            indices[i + 5] = j + 3;\n        }\n        return indices;\n    }\n\n    private drawGizmoRect(rect: PIXI.Rectangle, lineThickness: number = 1, lineColor: number = 0xFFFFFF, lineAlpha: number = 1): void {\n        const gizmo = new PIXI.Graphics();\n        gizmo\n            .lineStyle(lineThickness, lineColor, lineAlpha, 0.5, true)\n            .drawRect(rect.x, rect.y, rect.width, rect.height);\n        this.addChild(gizmo);\n    }\n\n    private unescape(input: string): string {\n        if (this.nocheck) {\n            return input;\n        }\n        return input.replace(/(\\\\n|\\\\r)/g, \"\\n\");\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/MSDFText.ts","module.exports = \"#define GLSLIFY 1\\nattribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 translationMatrix;\\nuniform mat3 projectionMatrix;\\nuniform float u_fontInfoSize;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    vTextureCoord = aTextureCoord;\\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition * u_fontInfoSize, 1.0)).xy, 0.0, 1.0);\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/msdf.vert\n// module id = 2\n// module chunks = 0","module.exports = \"#define GLSLIFY 1\\nvarying vec2 vTextureCoord;\\nuniform vec3 u_color;\\nuniform sampler2D uSampler;\\nuniform float u_alpha;\\nuniform float u_fontSize;\\nuniform float u_weight;\\nuniform float u_pxrange;\\n\\nuniform vec3 tint;\\n// Stroke effect parameters\\nuniform float strokeWeight;\\nuniform vec3 strokeColor;\\n\\n// Shadow effect parameters\\nuniform bool hasShadow;\\nuniform vec2 shadowOffset;\\nuniform float shadowSmoothing;\\nuniform vec3 shadowColor;\\nuniform float shadowAlpha;\\n\\nfloat median(float r, float g, float b) {\\n    return max(min(r, g), min(max(r, g), b));\\n}\\n\\nvoid main(void)\\n{\\n    float smoothing = clamp(2.0 * u_pxrange / u_fontSize, 0.0, 0.5);\\n\\n    vec2 textureCoord = vTextureCoord * 2.;\\n    vec3 sample = texture2D(uSampler, vTextureCoord).rgb;\\n    float dist = median(sample.r, sample.g, sample.b);\\n\\n    float alpha;\\n    vec3 color;\\n\\n    // dirty if statment, will change soon\\n    if (strokeWeight > 0.0) {\\n        alpha = smoothstep(strokeWeight - smoothing, strokeWeight + smoothing, dist);\\n        float outlineFactor = smoothstep(u_weight - smoothing, u_weight + smoothing, dist);\\n        color = mix(strokeColor, u_color, outlineFactor) * alpha;\\n    } else {\\n        alpha = smoothstep(u_weight - smoothing, u_weight + smoothing, dist);\\n        color = u_color * alpha;\\n    }\\n    vec4 text = vec4(color * tint, alpha) * u_alpha;\\n    if (hasShadow == false) {\\n        gl_FragColor = text;\\n    } else {\\n        vec3 shadowSample = texture2D(uSampler, vTextureCoord - shadowOffset).rgb;\\n        float shadowDist = median(shadowSample.r, shadowSample.g, shadowSample.b);\\n        float distAlpha = smoothstep(0.5 - shadowSmoothing, 0.5 + shadowSmoothing, shadowDist);\\n        vec4 shadow = vec4(shadowColor, shadowAlpha * distAlpha);\\n        gl_FragColor = mix(shadow, text, text.a);\\n    }\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/msdf.frag\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}